generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  name             String?    @unique
  selfIntroduction String
  password         Password?
  posts            Post[]
  Token            Token[]
  Channel          Channel[]
  RoleInfo         RoleInfo[]
  RoleLink         RoleLink[]
}

model Password {
  id       Int    @id @default(autoincrement())
  password String
  salt     String
  userId   String @unique
  user     User   @relation(fields: [userId], references: [id])
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Channel {
  id            String @id @default(uuid())
  name          String @unique
  description   String
  createdUserId String
  user          User   @relation(fields: [createdUserId], references: [id])
}

model RoleLink {
  id           Int      @id @default(autoincrement())
  roleId       String
  role         RoleInfo @relation(fields: [roleId], references: [id])
  roleLinkedAt DateTime @default(now())
  userId       String
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model RoleInfo {
  id            String   @id @default(uuid())
  name          String   @unique
  createdUserId String
  color         String   @default("#fff")
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [createdUserId], references: [id])

  manageServer  Boolean @default(false)
  manageChannel Boolean @default(false)
  manageUser    Boolean @default(false)
  manageRole    Boolean @default(false)

  RoleLink RoleLink[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  String
  author    User    @relation(fields: [authorId], references: [id])
}
